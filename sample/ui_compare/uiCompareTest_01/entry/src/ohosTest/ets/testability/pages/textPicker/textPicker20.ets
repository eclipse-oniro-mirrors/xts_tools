/**
 * Copyright (c) 2025 Shenzhen Kaihong Digital Industry Development Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import { LengthMetrics } from '@kit.ArkUI';

class bottom {
  bottom: number = 50;
}

let bott: bottom = new bottom();

@Entry
@Component
struct textPicker20 {
  private select: number = 1;
  private orfruits: string[] = ['orange1', 'orange2', 'orange3', 'orange4']
  private pefruits: string[] = ['peach1', 'peach2', 'peach3', 'peach4']
  private apfruits: string[] = ['apple1', 'apple2', 'apple3', 'apple4']
  private multi: string[][] = [this.apfruits, this.orfruits, this.pefruits]
  @State singleColumnWidths: LengthMetrics[] = [
    LengthMetrics.vp(100)
  ];

  build() {
    Column() {
      TextPicker({ range: this.multi, selected: this.select, columnWidths: this.singleColumnWidths })
        .onChange((value: string | string[], index: number | number[]) => {
          console.info('Picker item changed, value: ' + value + ', index: ' + index);
        })
        .onScrollStop((value: string | string[], index: number | number[]) => {
          console.info('Picker scroll stopped, value: ' + value + ', index: ' + index);
        })
        .margin(bott)
        .onEnterSelectedArea((value: string | string[], index: number | number[]) => {
          console.info('Picker item enter selected area, value: ' + value + ', index: ' + index);
        })
        .margin({ top: '10%' })

      Button('change columnWidths 60')
        .id('textPicker20_01')
        .height('5%')
        .onClick(() => {
          this.singleColumnWidths = [
            LengthMetrics.vp(60),
            LengthMetrics.vp(60),
            LengthMetrics.vp(60)
          ]
        })
        .margin({ top: 10, left: 20 })

      Button('change columnWidths')
        .id('textPicker20_02')
        .height('5%')
        .onClick(() => {
          this.singleColumnWidths = [
            LengthMetrics.vp(100),
            LengthMetrics.vp(80),
            LengthMetrics.vp(60)
          ]
        })
        .margin({ top: 10, left: 20 })

      Button('change columnWidths')
        .id('textPicker20_03')
        .height('5%')
        .onClick(() => {
          this.singleColumnWidths = [
            LengthMetrics.vp(100)
          ]
        })
        .margin({ top: 10, left: 20 })
    }.width('80%')
  }
}
